geom_node_point() +
geom_edge_link(aes(width = 2), alpha = 0.8) +
scale_edge_width(range = c(0.2, 2)) +
geom_node_text(label="id", repel = TRUE) +
labs(edge_width = "Letters") +
theme_graph()
ggraph(downstreamGraph_tidy, layout_as_tree(downstreamGraph, root=which(V(downstreamGraph)$name == "NRAS"),mode="out")) +
geom_node_point() +
geom_edge_link(aes(width = 2), alpha = 0.8) +
scale_edge_width(range = c(0.2, 2)) +
geom_node_text(label=id, repel = TRUE) +
labs(edge_width = "Letters") +
theme_graph()
ggraph(downstreamGraph_tidy, layout_as_tree(downstreamGraph, root=which(V(downstreamGraph)$name == "NRAS"),mode="out")) +
geom_node_point() +
geom_edge_link(aes(width = 2), alpha = 0.8) +
scale_edge_width(range = c(0.2, 2)) +
geom_node_text(label=name, repel = TRUE) +
labs(edge_width = "Letters") +
theme_graph()
ggraph(downstreamGraph_tidy, layout_as_tree(downstreamGraph, root=which(V(downstreamGraph)$name == "NRAS"),mode="out")) +
geom_node_point() +
geom_edge_link(aes(width = 2), alpha = 0.8) +
scale_edge_width(range = c(0.2, 2)) +
geom_node_text(label=V(downstreamGraph)$name, repel = TRUE) +
labs(edge_width = "Letters") +
theme_graph()
ggraph(downstreamGraph_tidy, layout_as_tree(downstreamGraph, root=which(V(downstreamGraph)$name == "NRAS"),mode="out")) +
geom_node_point() +
geom_edge_link(aes(width = 2), alpha = 0.8) +
scale_edge_width(range = c(0.2, 2)) +
geom_node_text(label=V(downstreamGraph)$name, repel = TRUE)
theme_graph()
ggraph(downstreamGraph_tidy, layout_as_tree(downstreamGraph, root=which(V(downstreamGraph)$name == "NRAS"),mode="out")) +
geom_node_point() +
geom_edge_link(aes(width = 2), alpha = 0.8) +
scale_edge_width(range = c(0.2, 2)) +
geom_node_text(label=V(downstreamGraph)$name, repel = TRUE) +
theme_graph()
ggraph(downstreamGraph_tidy, layout_as_tree(downstreamGraph, root=which(V(downstreamGraph)$name == "NRAS"),mode="out")) +
geom_node_point() +
geom_edge_link(aes(width = 1), alpha = 0.8) +
scale_edge_width(range = c(0.2, 2)) +
geom_node_text(label=V(downstreamGraph)$name, repel = TRUE) +
theme_graph()
ggraph(downstreamGraph_tidy, layout_as_tree(downstreamGraph, root=which(V(downstreamGraph)$name == "NRAS"),mode="out")) +
geom_node_point(aes(size=2)) +
geom_edge_link(aes(width = 1), alpha = 0.8) +
scale_edge_width(range = c(0.2, 2)) +
geom_node_text(label=V(downstreamGraph)$name, repel = TRUE) +
theme_graph()
ggraph(downstreamGraph_tidy, layout_as_tree(downstreamGraph, root=which(V(downstreamGraph)$name == "NRAS"),mode="out")) +
geom_node_point(aes(size=2, alpha=0.5)) +
geom_edge_link(aes(width = 1), alpha = 0.8) +
scale_edge_width(range = c(0.2, 2)) +
geom_node_text(label=V(downstreamGraph)$name, repel = TRUE) +
theme_graph()
ggraph(downstreamGraph_tidy, layout_as_tree(downstreamGraph, root=which(V(downstreamGraph)$name == "NRAS"),mode="out")) +
geom_node_point(aes(size=2, alpha=0.5, fill=V(downstreamGraph)$class)) +
geom_edge_link(aes(width = 1), alpha = 0.8) +
scale_edge_width(range = c(0.2, 2)) +
geom_node_text(label=V(downstreamGraph)$name, repel = TRUE) +
theme_graph()
ggraph(downstreamGraph_tidy, layout_as_tree(downstreamGraph, root=which(V(downstreamGraph)$name == "NRAS"),mode="out")) +
geom_node_point(aes(size=2, alpha=0.5, color=V(downstreamGraph)$class)) +
geom_edge_link(aes(width = 1), alpha = 0.8) +
scale_edge_width(range = c(0.2, 2)) +
geom_node_text(label=V(downstreamGraph)$name, repel = TRUE) +
theme_graph()
ggraph(downstreamGraph_tidy, layout_as_tree(downstreamGraph, root=which(V(downstreamGraph)$name == "NRAS"),mode="out")) +
geom_node_point(aes(size=2, alpha=0.5, color=V(downstreamGraph)$class)) +
geom_edge_link(aes(width = 1), alpha = 0.8,show.legend = FALSE) +
scale_edge_width(range = c(0.2, 2)) +
geom_node_text(label=V(downstreamGraph)$name, repel = TRUE) +
theme_graph()
ggraph(downstreamGraph_tidy, layout_as_tree(downstreamGraph, root=which(V(downstreamGraph)$name == "NRAS"),mode="out")) +
geom_node_point(aes(size=2, alpha=0.5, color=V(downstreamGraph)$class)) +
geom_edge_link(aes(width = 1), alpha = 0.8,show.legend = FALSE) +
scale_edge_width(range = c(0.2, 2)) +
geom_node_text(label=V(downstreamGraph)$name, repel = TRUE) +
guides(alpha = FALSE, size = FALSE) +
theme_graph()
rmarkdown::render("variantAnalysis.Rmd")
?degree
deg <- degree(downstreamGraph, mode="all")
V(downstreamGraph)$size <- deg*3
visIgraph(downstreamGraph)
visIgraph(downstreamGraph, layout_as_tree(downstreamGraph, root=which(V(downstreamGraph)$name == "NRAS"),mode="out"))
visIgraph(downstreamGraph, layout_as_tree(downstreamGraph, root=which(V(downstreamGraph)$name == "NRAS"),mode="out"))
visIgraph(downstreamGraph, layout=layout_as_tree(downstreamGraph, root=which(V(downstreamGraph)$name == "NRAS"),mode="out"))
visIgraph(downstreamGraph) %>%
visIgraphLayout(layout = layout_as_tree(downstreamGraph, root=which(V(downstreamGraph)$name == "NRAS"),mode="out")) %>%
visEdges(arrows = "middle")
visIgraph(downstreamGraph) %>%
visIgraphLayout(layout = layout_as_tree(downstreamGraph, root=which(V(downstreamGraph)$name == "NRAS"),mode="out"))
visIgraph(downstreamGraph) %>%
visIgraphLayout(layout = layout_as_tree(downstreamGraph, root=which(V(downstreamGraph)$name == "NRAS"),mode="out"))
l <- layout_as_tree(downstreamGraph, root=which(V(downstreamGraph)$name == "NRAS"),mode="out")
plot(downstreamGraph, layout=l)
visIgraph(downstreamGraph)
plot(downstreamGraph, edge.label = NA, vertex.size=7, layout=layout.bipartite)
visIgraph(downstreamGraph) %>%
visIgraphLayout(layout = l) %>%
visEdges(arrows = "middle")
visNetwork(downstreamGraph) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "middle")
visNetwork(downstreamGraph) %>%
visIgraphLayout(layout = "layout_with_fr")
visIgraph(downstreamGraph) %>%
visIgraphLayout(layout = "layout_with_fr")
visIgraph(downstreamGraph) %>%
visIgraphLayout(layout = l)
visIgraph(downstreamGraph, layout = l)
visNetwork(downstreamGraph) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "middle")
visIgraph(downstreamGraph) %>%
visIgraphLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "middle")
rmarkdown::render("variantAnalysis.Rmd")
rmarkdown::render("variantAnalysis.Rmd")
visIgraph(downstreamGraph) %>%
visLayout(layout = "layout_with_fr") %>%
visEdges(arrows = "middle")
visIgraph(downstreamGraph) %>%
visLayout(Heirarchical=T) %>%
visEdges(arrows = "middle")
visIgraph(downstreamGraph) %>%
visLayout(heirarchical =T) %>%
visEdges(arrows = "middle")
visIgraph(downstreamGraph) %>%
visLayout(hierarchical = TRUE) %>%
visEdges(arrows = "middle")
visIgraph(downstreamGraph) %>%
visHierarchicalLayout(direction = "LR") %>%
visEdges(arrows = "middle")
plot(downstreamGraph, layout=l, edge.label = NA)
visIgraph(downstreamGraph) %>%
visHierarchicalLayout(sortMethod = "directed", direction = "DU")%>%
visEdges(arrows = "middle")
visIgraph(downstreamGraph) %>%
visHierarchicalLayout(sortMethod = "directed", direction = "LR")%>%
visEdges(arrows = "middle")
visIgraph(downstreamGraph) %>%
visHierarchicalLayout(sortMethod = "directed", direction = "UD")%>%
visEdges(arrows = "middle")
visIgraph(downstreamGraph) %>%
visHierarchicalLayout(sortMethod = "directed", direction = "UD")%>%
visEdges(arrows = "middle") %>%
visInteraction(hover = T) %>%
visEvents(hoverEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 14}});
}") %>%
visEvents(blurEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 0}});
}")
visIgraph(downstreamGraph) %>%
visHierarchicalLayout(sortMethod = "directed", direction = "UD")%>%
visEdges(arrows = "middle") %>%
visInteraction(hover = T) %>%
visEvents(hoverEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 14}});
}", hoverNode = "function(f){
this.body.data.nodes.update({id: f.node, font: {size : 14}});
}") %>%
visEvents(blurEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 0}});
}", blurNode = "function(f){
this.body.data.nodes.update({id: f.node, font: {size : 0}});
}")
visIgraph(downstreamGraph) %>%
visHierarchicalLayout(sortMethod = "directed", direction = "UD")%>%
visInteraction(hover = T) %>%
visEvents(hoverEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 14}});
}") %>%
visEvents(blurEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 0}});
}")
visIgraph(downstreamGraph) %>%
visHierarchicalLayout(sortMethod = "directed", direction = "UD")%>%
visInteraction(hover = T) %>%
visEvents(hoverEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 14}});
}") %>%
visEvents(blurEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 0}});
}") %>%
visEvents(hoverNode = "function(f){
this.body.data.nodes.update({id: f.node, font: {size : 14}});
}") %>%
visEvents(blurNode = "function(f){
this.body.data.nodes.update({id: f.node, font: {size : 0}});
}")
visIgraph(downstreamGraph) %>%
visHierarchicalLayout(sortMethod = "directed", direction = "UD")%>%
visInteraction(hover = T) %>%
visEvents(hoverEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 14}});
}") %>%
visEvents(blurEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 0}});
}") %>%
visEvents(hoverNode = "function(f){
this.body.data.nodes.update({id: f.node, font: {size : 14}});
}") %>%
visEvents(blurNode = "function(f){
this.body.data.nodes.update({id: f.node, font: {size : 0}});
}")
rmarkdown::render("variantAnalysis.Rmd")
visIgraph(downstreamGraph) %>%
visHierarchicalLayout(sortMethod = "directed", direction = "UD")%>%
visInteraction(hover = T) %>%
visEvents(hoverEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 14}});
}") %>%
visEvents(blurEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 0}});
}") %>%
visEvents(hoverNode = "function(e){
this.body.data.nodes.update({id: e.node, font: {size : 14}});
}") %>%
visEvents(blurNode = "function(e){
this.body.data.nodes.update({id: e.node, font: {size : 0}});
}")
visIgraph(downstreamGraph) %>%
visHierarchicalLayout(sortMethod = "directed", direction = "UD")%>%
visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
visInteraction(hover = T) %>%
visEvents(hoverEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 14}});
}") %>%
visEvents(blurEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 0}});
}") %>%
visEvents(hoverNode = "function(e){
this.body.data.nodes.update({id: e.node, font: {size : 14}});
}") %>%
visEvents(blurNode = "function(e){
this.body.data.nodes.update({id: e.node, font: {size : 0}});
}")
visIgraph(downstreamGraph, font.size=0) %>%
visHierarchicalLayout(sortMethod = "directed", direction = "UD")%>%
visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
visInteraction(hover = T) %>%
visEvents(hoverEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 14}});
}") %>%
visEvents(blurEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 0}});
}") %>%
visEvents(hoverNode = "function(e){
this.body.data.nodes.update({id: e.node, font: {size : 14}});
}") %>%
visEvents(blurNode = "function(e){
this.body.data.nodes.update({id: e.node, font: {size : 0}});
}")
visIgraph(downstreamGraph) %>%
visHierarchicalLayout(sortMethod = "directed", direction = "UD")%>%
visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
visInteraction(hover = T) %>%
visEvents(hoverEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 14}});
}") %>%
visEvents(blurEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 0}});
}") %>%
visEvents(hoverNode = "function(e){
this.body.data.nodes.update({id: e.node, font: {size : 14}});
}") %>%
visEvents(blurNode = "function(e){
this.body.data.nodes.update({id: e.node, font: {size : 0}});
}")
visIgraph(downstreamGraph) %>%
visHierarchicalLayout(sortMethod = "directed", direction = "UD")%>%
visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
visNodes() %>%
visInteraction(hover = T) %>%
visEvents(hoverEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 14}});
}") %>%
visEvents(blurEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 0}});
}") %>%
visEvents(hoverNode = "function(e){
this.body.data.nodes.update({id: e.node, font: {size : 14}});
}") %>%
visEvents(blurNode = "function(e){
this.body.data.nodes.update({id: e.node, font: {size : 0}});
}")
visIgraph(downstreamGraph) %>%
visHierarchicalLayout(sortMethod = "directed", direction = "UD")%>%
visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
visNodes(label = NA) %>%
visInteraction(hover = T) %>%
visEvents(hoverEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 14}});
}") %>%
visEvents(blurEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 0}});
}") %>%
visEvents(hoverNode = "function(e){
this.body.data.nodes.update({id: e.node, font: {size : 14}});
}") %>%
visEvents(blurNode = "function(e){
this.body.data.nodes.update({id: e.node, font: {size : 0}});
}")
rmarkdown::render("variantAnalysis.Rmd")
visIgraph(downstreamGraph) %>%
visHierarchicalLayout(sortMethod = "directed", direction = "UD")%>%
visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
visGroups(groupname = "variant_gene", color = "red", shape = "square",
shadow = list(enabled = TRUE)) %>%
visInteraction(hover = T) %>%
visEvents(hoverEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 14}});
}") %>%
visEvents(blurEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 0}});
}") %>%
visEvents(hoverNode = "function(e){
this.body.data.nodes.update({id: e.node, font: {size : 14}});
}") %>%
visEvents(blurNode = "function(e){
this.body.data.nodes.update({id: e.node, font: {size : 0}});
}")
visIgraph(downstreamGraph) %>%
visHierarchicalLayout(sortMethod = "directed", direction = "UD")%>%
visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
visGroups(groupname = "gene", color = "red", shape = "square",
shadow = list(enabled = TRUE)) %>%
visInteraction(hover = T) %>%
visEvents(hoverEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 14}});
}") %>%
visEvents(blurEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 0}});
}") %>%
visEvents(hoverNode = "function(e){
this.body.data.nodes.update({id: e.node, font: {size : 14}});
}") %>%
visEvents(blurNode = "function(e){
this.body.data.nodes.update({id: e.node, font: {size : 0}});
}")
rmarkdown::render("variantAnalysis.Rmd")
rmarkdown::render("variantAnalysis.Rmd")
visIgraph(downstreamGraph) %>%
visHierarchicalLayout(sortMethod = "directed", direction = "UD")%>%
visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
visGroups(groupname = "gene", color = "red", shape = "square",
shadow = list(enabled = TRUE)) %>%
visInteraction(hover = T) %>%
visEvents(hoverEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 14}});
}") %>%
visEvents(blurEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 0}});
}") %>%
visEvents(hoverNode = "function(e){
this.body.data.nodes.update({id: e.node, font: {size : 14}});
}") %>%
visEvents(blurNode = "function(e){
this.body.data.nodes.update({id: e.node, font: {size : 0}});
}")
visIgraph(downstreamGraph) %>%
visHierarchicalLayout(sortMethod = "directed", direction = "UD")%>%
visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
visGroups(groupname = c("gene","drug)", color = c("red", "blue"),
shadow = list(enabled = TRUE)) %>%
visInteraction(hover = T) %>%
visEvents(hoverEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 14}});
}") %>%
visEvents(blurEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 0}});
}") %>%
visEvents(hoverNode = "function(e){
this.body.data.nodes.update({id: e.node, font: {size : 14}});
}") %>%
visEvents(blurNode = "function(e){
this.body.data.nodes.update({id: e.node, font: {size : 0}});
}")
)
visIgraph(downstreamGraph) %>%
visHierarchicalLayout(sortMethod = "directed", direction = "UD")%>%
visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
visGroups(groupname = c("gene","drug"), color = c("red", "blue"),
shadow = list(enabled = TRUE)) %>%
visInteraction(hover = T) %>%
visEvents(hoverEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 14}});
}") %>%
visEvents(blurEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 0}});
}") %>%
visEvents(hoverNode = "function(e){
this.body.data.nodes.update({id: e.node, font: {size : 14}});
}") %>%
visEvents(blurNode = "function(e){
this.body.data.nodes.update({id: e.node, font: {size : 0}});
}")
visIgraph(downstreamGraph) %>%
visHierarchicalLayout(sortMethod = "directed", direction = "UD")%>%
visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
visGroups(groupname = c("gene","drug"), color = c("red", "blue")) %>%
visInteraction(hover = T) %>%
visEvents(hoverEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 14}});
}") %>%
visEvents(blurEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 0}});
}") %>%
visEvents(hoverNode = "function(e){
this.body.data.nodes.update({id: e.node, font: {size : 14}});
}") %>%
visEvents(blurNode = "function(e){
this.body.data.nodes.update({id: e.node, font: {size : 0}});
}")
visIgraph(downstreamGraph) %>%
visHierarchicalLayout(sortMethod = "directed", direction = "UD")%>%
visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
visGroups(groupname = c("gene","drugs"), color = c("red", "blue")) %>%
visInteraction(hover = T) %>%
visEvents(hoverEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 14}});
}") %>%
visEvents(blurEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 0}});
}") %>%
visEvents(hoverNode = "function(e){
this.body.data.nodes.update({id: e.node, font: {size : 14}});
}") %>%
visEvents(blurNode = "function(e){
this.body.data.nodes.update({id: e.node, font: {size : 0}});
}")
visIgraph(downstreamGraph) %>%
visHierarchicalLayout(sortMethod = "directed", direction = "UD")%>%
visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
visGroups(groupname = c("gene"), color = c("red")) %>%
visInteraction(hover = T) %>%
visEvents(hoverEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 14}});
}") %>%
visEvents(blurEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 0}});
}") %>%
visEvents(hoverNode = "function(e){
this.body.data.nodes.update({id: e.node, font: {size : 14}});
}") %>%
visEvents(blurNode = "function(e){
this.body.data.nodes.update({id: e.node, font: {size : 0}});
}")
visIgraph(downstreamGraph) %>%
visHierarchicalLayout(sortMethod = "directed", direction = "UD")%>%
visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
visGroups(groupname = "gene", color = "red", shape = "square",
shadow = list(enabled = TRUE)) %>%
visInteraction(hover = T) %>%
visEvents(hoverEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 14}});
}") %>%
visEvents(blurEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 0}});
}") %>%
visEvents(hoverNode = "function(e){
this.body.data.nodes.update({id: e.node, font: {size : 14}});
}") %>%
visEvents(blurNode = "function(e){
this.body.data.nodes.update({id: e.node, font: {size : 0}});
}")
visIgraph(downstreamGraph) %>%
visHierarchicalLayout(sortMethod = "directed", direction = "UD")%>%
visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
visGroups(groupname = "gene", color = "red", shape = "triangle") %>%
visInteraction(hover = T) %>%
visEvents(hoverEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 14}});
}") %>%
visEvents(blurEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 0}});
}") %>%
visEvents(hoverNode = "function(e){
this.body.data.nodes.update({id: e.node, font: {size : 14}});
}") %>%
visEvents(blurNode = "function(e){
this.body.data.nodes.update({id: e.node, font: {size : 0}});
}")
View(nodeList)
View(variant.nodes)
rmarkdown::render("variantAnalysis.Rmd")
rmarkdown::render("variantAnalysis.Rmd")
rmarkdown::render("variantAnalysis.Rmd")
visIgraph(downstreamGraph) %>%
visHierarchicalLayout(sortMethod = "directed", direction = "UD")%>%
visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) %>%
visGroups(groupname = "gene", color = "red",
shadow = list(enabled = TRUE)) %>%
visInteraction(hover = T) %>%
visEvents(hoverEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 14}});
}") %>%
visEvents(blurEdge = "function(e){
this.body.data.edges.update({id: e.edge, font: {size : 0}});
}") %>%
visEvents(hoverNode = "function(e){
this.body.data.nodes.update({id: e.node, font: {size : 14}});
}") %>%
visEvents(blurNode = "function(e){
this.body.data.nodes.update({id: e.node, font: {size : 0}});
}")
rmarkdown::render("variantAnalysis.Rmd")
